Just like functions are made friends of classes, we can also make one class to be a friend of another class. Then, the friend class will have access to all the private members of the other class.

If a class "A" wants to make some functionality using private members of class "B", then class "B" sould declare "A" as friend. This "B" gives permission to class "A" to access its inrernal member.


	#include <iostream>
	using namespace std;

	class Square;

	class Rectangle {
		int width, height;

	public:
		Rectangle(int w = 1, int h = 1):width(w),height(h){} 
		void display() {
			cout << "Rectangle: " << width * height << endl;
		};
		void morph(Square &);
	};

	class Square {
		int side;

	public:
		Square(int s = 1):side(s){} 
		void display() {
			cout << "Square: " << side * side << endl;
		};
		friend class Rectangle;
	};

	void Rectangle::morph(Square &s) {
		width = s.side;
		height = s.side;
	}

	int main () {
		Rectangle rec(5,10);
		Square sq(5);
		cout << "Before:" << endl;
		rec.display();
		sq.display();

		rec.morph(sq);
		cout << "\nAfter:" << endl;
		rec.display();
		sq.display();
		return 0;
	}